{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { childrenPropType, onSelectPropType, selectedIndexPropType } from '../helpers/propTypes';\nimport UncontrolledTabs from './UncontrolledTabs';\nimport { getTabsCount } from '../helpers/count';\nvar MODE_CONTROLLED = 0;\nvar MODE_UNCONTROLLED = 1;\nvar propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: childrenPropType,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  defaultFocus: PropTypes.bool,\n  defaultIndex: PropTypes.number,\n  direction: PropTypes.oneOf(['rtl', 'ltr']),\n  disabledTabClassName: PropTypes.string,\n  disableUpDownKeys: PropTypes.bool,\n  domRef: PropTypes.func,\n  environment: PropTypes.object,\n  focusTabOnClick: PropTypes.bool,\n  forceRenderTabPanel: PropTypes.bool,\n  onSelect: onSelectPropType,\n  selectedIndex: selectedIndexPropType,\n  selectedTabClassName: PropTypes.string,\n  selectedTabPanelClassName: PropTypes.string\n} : {};\nvar defaultProps = {\n  defaultFocus: false,\n  focusTabOnClick: true,\n  forceRenderTabPanel: false,\n  selectedIndex: null,\n  defaultIndex: null,\n  environment: null,\n  disableUpDownKeys: false\n};\nvar getModeFromProps = function getModeFromProps(props) {\n  return props.selectedIndex === null ? MODE_UNCONTROLLED : MODE_CONTROLLED;\n};\nvar checkForIllegalModeChange = function checkForIllegalModeChange(props, mode) {\n  if (process.env.NODE_ENV !== 'production' && mode != undefined && mode !== getModeFromProps(props)) {\n    throw new Error(\"Switching between controlled mode (by using `selectedIndex`) and uncontrolled mode is not supported in `Tabs`.\\nFor more information about controlled and uncontrolled mode of react-tabs see https://github.com/reactjs/react-tabs#controlled-vs-uncontrolled-mode.\");\n  }\n};\n/**\n * State:\n *   mode: Initialized only once from props and never changes\n *   selectedIndex: null if controlled mode, otherwise initialized with prop defaultIndex, changed on selection of tabs, has effect to ensure it never gets out of bound\n *   focus: Because we never remove focus from the Tabs this state is only used to indicate that we should focus the current tab.\n *          It is initialized from the prop defaultFocus, and after the first render it is reset back to false. Later it can become true again when using keys to navigate the tabs.\n */\n\nvar Tabs = function Tabs(props) {\n  var children = props.children,\n    defaultFocus = props.defaultFocus,\n    defaultIndex = props.defaultIndex,\n    focusTabOnClick = props.focusTabOnClick,\n    onSelect = props.onSelect;\n  var _useState = useState(defaultFocus),\n    focus = _useState[0],\n    setFocus = _useState[1];\n  var _useState2 = useState(getModeFromProps(props)),\n    mode = _useState2[0];\n  var _useState3 = useState(mode === MODE_UNCONTROLLED ? defaultIndex || 0 : null),\n    selectedIndex = _useState3[0],\n    setSelectedIndex = _useState3[1];\n  useEffect(function () {\n    // Reset focus after initial render, see comment above\n    setFocus(false);\n  }, []);\n  if (mode === MODE_UNCONTROLLED) {\n    // Ensure that we handle removed tabs and don't let selectedIndex get out of bounds\n    var tabsCount = getTabsCount(children);\n    useEffect(function () {\n      if (selectedIndex != null) {\n        var maxTabIndex = Math.max(0, tabsCount - 1);\n        setSelectedIndex(Math.min(selectedIndex, maxTabIndex));\n      }\n    }, [tabsCount]);\n  }\n  checkForIllegalModeChange(props, mode);\n  var handleSelected = function handleSelected(index, last, event) {\n    // Call change event handler\n    if (typeof onSelect === 'function') {\n      // Check if the change event handler cancels the tab change\n      if (onSelect(index, last, event) === false) return;\n    } // Always set focus on tabs unless it is disabled\n\n    if (focusTabOnClick) {\n      setFocus(true);\n    }\n    if (mode === MODE_UNCONTROLLED) {\n      // Update selected index\n      setSelectedIndex(index);\n    }\n  };\n  var subProps = _extends({}, props);\n  subProps.focus = focus;\n  subProps.onSelect = handleSelected;\n  if (selectedIndex != null) {\n    subProps.selectedIndex = selectedIndex;\n  }\n  delete subProps.defaultFocus;\n  delete subProps.defaultIndex;\n  delete subProps.focusTabOnClick;\n  return /*#__PURE__*/React.createElement(UncontrolledTabs, subProps, children);\n};\nTabs.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTabs.defaultProps = defaultProps;\nTabs.tabsRole = 'Tabs';\nexport default Tabs;","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","PropTypes","React","useEffect","useState","childrenPropType","onSelectPropType","selectedIndexPropType","UncontrolledTabs","getTabsCount","MODE_CONTROLLED","MODE_UNCONTROLLED","propTypes","process","env","NODE_ENV","children","className","oneOfType","string","array","object","defaultFocus","bool","defaultIndex","number","direction","oneOf","disabledTabClassName","disableUpDownKeys","domRef","func","environment","focusTabOnClick","forceRenderTabPanel","onSelect","selectedIndex","selectedTabClassName","selectedTabPanelClassName","defaultProps","getModeFromProps","props","checkForIllegalModeChange","mode","undefined","Error","Tabs","_useState","focus","setFocus","_useState2","_useState3","setSelectedIndex","tabsCount","maxTabIndex","Math","max","min","handleSelected","index","last","event","subProps","createElement","tabsRole"],"sources":["C:/Users/omkar/OneDrive/Documents/GitHub/adport/Spot_Round_Frontend-main/node_modules/react-tabs/esm/components/Tabs.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { childrenPropType, onSelectPropType, selectedIndexPropType } from '../helpers/propTypes';\nimport UncontrolledTabs from './UncontrolledTabs';\nimport { getTabsCount } from '../helpers/count';\nvar MODE_CONTROLLED = 0;\nvar MODE_UNCONTROLLED = 1;\nvar propTypes = process.env.NODE_ENV !== \"production\" ? {\n  children: childrenPropType,\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  defaultFocus: PropTypes.bool,\n  defaultIndex: PropTypes.number,\n  direction: PropTypes.oneOf(['rtl', 'ltr']),\n  disabledTabClassName: PropTypes.string,\n  disableUpDownKeys: PropTypes.bool,\n  domRef: PropTypes.func,\n  environment: PropTypes.object,\n  focusTabOnClick: PropTypes.bool,\n  forceRenderTabPanel: PropTypes.bool,\n  onSelect: onSelectPropType,\n  selectedIndex: selectedIndexPropType,\n  selectedTabClassName: PropTypes.string,\n  selectedTabPanelClassName: PropTypes.string\n} : {};\nvar defaultProps = {\n  defaultFocus: false,\n  focusTabOnClick: true,\n  forceRenderTabPanel: false,\n  selectedIndex: null,\n  defaultIndex: null,\n  environment: null,\n  disableUpDownKeys: false\n};\n\nvar getModeFromProps = function getModeFromProps(props) {\n  return props.selectedIndex === null ? MODE_UNCONTROLLED : MODE_CONTROLLED;\n};\n\nvar checkForIllegalModeChange = function checkForIllegalModeChange(props, mode) {\n  if (process.env.NODE_ENV !== 'production' && mode != undefined && mode !== getModeFromProps(props)) {\n    throw new Error(\"Switching between controlled mode (by using `selectedIndex`) and uncontrolled mode is not supported in `Tabs`.\\nFor more information about controlled and uncontrolled mode of react-tabs see https://github.com/reactjs/react-tabs#controlled-vs-uncontrolled-mode.\");\n  }\n};\n/**\n * State:\n *   mode: Initialized only once from props and never changes\n *   selectedIndex: null if controlled mode, otherwise initialized with prop defaultIndex, changed on selection of tabs, has effect to ensure it never gets out of bound\n *   focus: Because we never remove focus from the Tabs this state is only used to indicate that we should focus the current tab.\n *          It is initialized from the prop defaultFocus, and after the first render it is reset back to false. Later it can become true again when using keys to navigate the tabs.\n */\n\n\nvar Tabs = function Tabs(props) {\n  var children = props.children,\n      defaultFocus = props.defaultFocus,\n      defaultIndex = props.defaultIndex,\n      focusTabOnClick = props.focusTabOnClick,\n      onSelect = props.onSelect;\n\n  var _useState = useState(defaultFocus),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var _useState2 = useState(getModeFromProps(props)),\n      mode = _useState2[0];\n\n  var _useState3 = useState(mode === MODE_UNCONTROLLED ? defaultIndex || 0 : null),\n      selectedIndex = _useState3[0],\n      setSelectedIndex = _useState3[1];\n\n  useEffect(function () {\n    // Reset focus after initial render, see comment above\n    setFocus(false);\n  }, []);\n\n  if (mode === MODE_UNCONTROLLED) {\n    // Ensure that we handle removed tabs and don't let selectedIndex get out of bounds\n    var tabsCount = getTabsCount(children);\n    useEffect(function () {\n      if (selectedIndex != null) {\n        var maxTabIndex = Math.max(0, tabsCount - 1);\n        setSelectedIndex(Math.min(selectedIndex, maxTabIndex));\n      }\n    }, [tabsCount]);\n  }\n\n  checkForIllegalModeChange(props, mode);\n\n  var handleSelected = function handleSelected(index, last, event) {\n    // Call change event handler\n    if (typeof onSelect === 'function') {\n      // Check if the change event handler cancels the tab change\n      if (onSelect(index, last, event) === false) return;\n    } // Always set focus on tabs unless it is disabled\n\n\n    if (focusTabOnClick) {\n      setFocus(true);\n    }\n\n    if (mode === MODE_UNCONTROLLED) {\n      // Update selected index\n      setSelectedIndex(index);\n    }\n  };\n\n  var subProps = _extends({}, props);\n\n  subProps.focus = focus;\n  subProps.onSelect = handleSelected;\n\n  if (selectedIndex != null) {\n    subProps.selectedIndex = selectedIndex;\n  }\n\n  delete subProps.defaultFocus;\n  delete subProps.defaultIndex;\n  delete subProps.focusTabOnClick;\n  return /*#__PURE__*/React.createElement(UncontrolledTabs, subProps, children);\n};\n\nTabs.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTabs.defaultProps = defaultProps;\nTabs.tabsRole = 'Tabs';\nexport default Tabs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}